#!/bin/sh

realpath () {
(
  TARGET_FILE="$1"

  cd "$(dirname "$TARGET_FILE")"
  TARGET_FILE=$(basename "$TARGET_FILE")

  COUNT=0
  while [ -L "$TARGET_FILE" -a $COUNT -lt 100 ]
  do
      TARGET_FILE=$(readlink "$TARGET_FILE")
      cd "$(dirname "$TARGET_FILE")"
      TARGET_FILE=$(basename "$TARGET_FILE")
      COUNT=$(($COUNT + 1))
  done

  if [ "$TARGET_FILE" = "." -o "$TARGET_FILE" = ".." ]; then
    cd "$TARGET_FILE"
    TARGET_FILEPATH=
  else
    TARGET_FILEPATH=/$TARGET_FILE
  fi

  echo "$(pwd -P)/$TARGET_FILE"
)
}

# Allow user and template_declares (see below) to add java options.
addJava () {
  java_opts="$java_opts $1"
}

# Allow user to specify java options. These get listed first per bash-template.
if [ -n "$JAVA_OPTS" ]
then
  addJava "$JAVA_OPTS"
fi

# Loads a configuration file full of default command line options for this script.
loadConfigFile() {
  cat "$1" | sed $'/^\#/d;s/\r$//' | sed 's/^-J-X/-X/' | tr '\r\n' ' '
}


real_script_path="$(realpath "$0")"
app_home="$(realpath "$(dirname "$real_script_path")")"
lib_dir="$(realpath "${app_home}/../lib")"

app_mainclass=CRUD_app

script_conf_file="${app_home}/../conf/application.ini"
app_classpath="$lib_dir/default.akka-http-play-0.1.jar:$lib_dir/org.scala-lang.scala-library-2.13.4.jar:$lib_dir/com.typesafe.akka.akka-actor-typed_2.13-2.6.8.jar:$lib_dir/com.typesafe.akka.akka-stream_2.13-2.6.8.jar:$lib_dir/com.typesafe.akka.akka-http_2.13-10.2.3.jar:$lib_dir/com.typesafe.akka.akka-http-spray-json_2.13-10.2.3.jar:$lib_dir/org.apache.kafka.kafka_2.13-2.7.0.jar:$lib_dir/com.typesafe.akka.akka-stream-kafka_2.13-2.0.7.jar:$lib_dir/com.typesafe.akka.akka-actor_2.13-2.6.8.jar:$lib_dir/com.typesafe.akka.akka-slf4j_2.13-2.6.8.jar:$lib_dir/org.slf4j.slf4j-api-1.7.30.jar:$lib_dir/com.typesafe.akka.akka-protobuf-v3_2.13-2.6.8.jar:$lib_dir/org.reactivestreams.reactive-streams-1.0.3.jar:$lib_dir/com.typesafe.ssl-config-core_2.13-0.4.1.jar:$lib_dir/com.typesafe.akka.akka-http-core_2.13-10.2.3.jar:$lib_dir/io.spray.spray-json_2.13-1.3.6.jar:$lib_dir/org.apache.kafka.kafka-clients-2.7.0.jar:$lib_dir/org.apache.kafka.kafka-raft-2.7.0.jar:$lib_dir/com.fasterxml.jackson.core.jackson-databind-2.10.5.1.jar:$lib_dir/com.fasterxml.jackson.module.jackson-module-scala_2.13-2.10.5.jar:$lib_dir/com.fasterxml.jackson.dataformat.jackson-dataformat-csv-2.10.5.jar:$lib_dir/com.fasterxml.jackson.datatype.jackson-datatype-jdk8-2.10.5.jar:$lib_dir/net.sf.jopt-simple.jopt-simple-5.0.4.jar:$lib_dir/com.yammer.metrics.metrics-core-2.2.0.jar:$lib_dir/org.scala-lang.modules.scala-collection-compat_2.13-2.2.0.jar:$lib_dir/org.scala-lang.modules.scala-java8-compat_2.13-0.9.1.jar:$lib_dir/org.scala-lang.scala-reflect-2.13.4.jar:$lib_dir/com.typesafe.scala-logging.scala-logging_2.13-3.9.2.jar:$lib_dir/org.apache.zookeeper.zookeeper-3.5.8.jar:$lib_dir/commons-cli.commons-cli-1.4.jar:$lib_dir/com.typesafe.config-1.4.0.jar:$lib_dir/org.scala-lang.modules.scala-parser-combinators_2.13-1.1.2.jar:$lib_dir/com.typesafe.akka.akka-parsing_2.13-10.2.3.jar:$lib_dir/com.twitter.hpack-1.0.2.jar:$lib_dir/com.github.luben.zstd-jni-1.4.5-6.jar:$lib_dir/org.lz4.lz4-java-1.7.1.jar:$lib_dir/org.xerial.snappy.snappy-java-1.1.7.7.jar:$lib_dir/com.fasterxml.jackson.core.jackson-annotations-2.10.5.jar:$lib_dir/com.fasterxml.jackson.core.jackson-core-2.10.5.jar:$lib_dir/com.fasterxml.jackson.module.jackson-module-paranamer-2.10.5.jar:$lib_dir/org.apache.zookeeper.zookeeper-jute-3.5.8.jar:$lib_dir/org.apache.yetus.audience-annotations-0.5.0.jar:$lib_dir/io.netty.netty-handler-4.1.48.Final.jar:$lib_dir/io.netty.netty-transport-native-epoll-4.1.48.Final.jar:$lib_dir/com.thoughtworks.paranamer.paranamer-2.8.jar:$lib_dir/io.netty.netty-common-4.1.48.Final.jar:$lib_dir/io.netty.netty-resolver-4.1.48.Final.jar:$lib_dir/io.netty.netty-buffer-4.1.48.Final.jar:$lib_dir/io.netty.netty-transport-4.1.48.Final.jar:$lib_dir/io.netty.netty-codec-4.1.48.Final.jar:$lib_dir/io.netty.netty-transport-native-unix-common-4.1.48.Final.jar"


# If a configuration file exist, read the contents to $opts
[ -f "$script_conf_file" ] && opts=$(loadConfigFile "$script_conf_file")

exec java $java_opts -classpath $app_classpath $opts $app_mainclass "$@"
